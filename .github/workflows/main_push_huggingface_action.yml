name: Deploy to Hugging Face Space

on:
  push:
    branches: [main]

jobs:
  deploy_huggingface:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout GitHub repository (with LFS)
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Configure Git identity
        run: |
          git config --global user.email "developer@smartsurgerytek.com"
          git config --global user.name "Smartsurgery CI"

      - name: Clone Hugging Face Space with token authentication
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HF_TOKEN }}  # Set HUGGINGFACE_TOKEN environment variable
        run: |
          git clone https://smartsurgery:$HUGGINGFACE_TOKEN@huggingface.co/spaces/smartsurgery/Smartsurgery_Dentistry_Models_Demo hf_space

      - name: Enable Git LFS
        run: |
          cd hf_space
          git lfs install

      - name: Clone and remove not necessary files
        run: |
          rsync -av --delete --exclude=".git" --exclude="hf_space/" ./ hf_space/ || [[ $? == 24 ]]
          cd hf_space
          rm -rf docs

      # Cache pip dependencies
      - name: Cache virtualenv
        uses: actions/cache@v3
        with:
          path: ~/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Cache Hugging Face models
      - name: Cache downloaded models (./models)
        uses: actions/cache@v3
        with:
          path: ./models
          key: ${{ runner.os }}-models-${{ hashFiles('src/allocation/service_layer/download.py') }}
          restore-keys: |
            ${{ runner.os }}-models-

      - name: Install dependencies
        run: |
          python -m venv ~/.venv
          source ~/.venv/bin/activate
          pip install huggingface_hub

      - name: Run download script
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HF_TOKEN }}  # Make HUGGINGFACE_TOKEN available to the script if needed
        run: |
          ~/.venv/bin/python ./src/allocation/service_layer/download.py

      - name: Debug Check if models folder exists
        run: |
          ls -R ./models || echo "models folder not found after download.py"

      - name: Copy download files
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HF_TOKEN }}  # Make HUGGINGFACE_TOKEN available to the script if needed
        run: |
          cp -r ./models ./hf_space/
          cp -r ./conf ./hf_space/

      - name: Confirm contents copied to hf_space
        run: |
          ls -R ./hf_space/models || echo "models not copied"

      - name: Update README.md with Space metadata
        run: |
          cat <<EOF > hf_space/README.md
          ---
          title: Smartsurgery Dentistry Models Demo
          emoji: 🐰
          colorFrom: red
          colorTo: pink
          sdk: gradio
          sdk_version: 5.29.1
          app_file: ./src/allocation/entrypoints/huggingface_gradio.py
          pinned: false
          ---
          EOF

      - name: Ensure models tracked by Git LFS and commit
        env:
          HUGGINGFACE_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          cd hf_space

          rm -f .gitignore
          
          # git lfs track "*.pt" "*.pth"
          # git lfs track "*.jpg"
          # git lfs track "*.png"
          # git lfs track "*.npy" #cause sometimes the old cache in lfs is not tracked
          find models -type f \( -name "*.pt" -o -name "*.pth" -o -name "*.npy" -o -name "*.jpg" -o -name "*.png" \) > tracked_files.txt
          while read file; do
            git lfs track "$file"  
          done < tracked_files.txt
                              
          git add .gitattributes
          git add models/ conf/ README.md
          git add .

          git status
        
          # Commit and push
          git commit -m "smartsurgery CI auto push from dentistry-inference-core" || echo "No changes to commit"
          git push https://smartsurgery:$HUGGINGFACE_TOKEN@huggingface.co/spaces/smartsurgery/Smartsurgery_Dentistry_Models_Demo main